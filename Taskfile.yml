---
version: "3"

vars:
  PANSIBLE_DIR: "{{.ROOT_DIR}}/ansible"
  KUBERNETES_DIR: "{{.ROOT_DIR}}/kubernetes"
  TERRAFORM_DIR: "{{.ROOT_DIR}}/terraform"

env:
  KUBECONFIG: "{{.ROOT_DIR}}/kubeconfig"
  SOPS_AGE_KEY_FILE: "{{.ROOT_DIR}}/age.key"

includes:
  flux:
    dir: .taskfiles/flux
    taskfile: .taskfiles/flux
  migrate: .taskfiles/migrate.yml
  volsync:
    taskfile: ".taskfiles/volsync"
    dir: .taskfiles/volsync
  rook:
    taskfile: ".taskfiles/rook"
    dir: .taskfiles/rook
  k8s:
    taskfile: ".taskfiles/k8s"
    dir: .taskfiles/k8s
tasks:

  default:
    silent: true
    cmds: ["task -l"]

  configure-venv:
    desc: Install or upgrade the Python virtual env
    cmds:
      - "{{.PYTHON_BIN}} -m venv {{.ROOT_DIR}}/.venv"
      - .venv/bin/python3 -m pip install --upgrade pip setuptools wheel
      - .venv/bin/python3 -m pip install --upgrade --requirement "{{.ROOT_DIR}}/requirements.txt"
      - .venv/bin/ansible-galaxy install --role-file "{{.ROOT_DIR}}/requirements.yaml" --force

  sync-secrets:
    desc: Sync ExternalSecret resources
    vars:
      secret: '{{ .secret | default ""}}'
      namespace: '{{.namespace | default "default"}}'
    cmd: |
      {{if eq .secret ""}}
        kubectl get externalsecret.external-secrets.io --all-namespaces --no-headers -A | awk '{print $1, $2}' \
          | xargs --max-procs=4 -l bash -c 'kubectl -n $0 annotate externalsecret.external-secrets.io $1 force-sync=$(date +%s) --overwrite'
      {{else}}
        kubectl -n {{.namespace}} annotate externalsecret.external-secrets.io {{.secret}} force-sync=$(date +%s) --overwrite
      {{end}}
    preconditions:
      - kubectl -n {{.namespace}} get externalsecret {{.secret}}

  mount-volume:
    desc: Mount a PersistentVolumeClaim to a temporary pod
    interactive: true
    vars:
      claim: '{{ or .claim (fail "PersistentVolumeClaim `claim` is required") }}'
      namespace: '{{.namespace | default "default"}}'
    cmd: |
      kubectl run -n {{.namespace}} debug-{{.claim}} -i --tty --rm --image=null --privileged --overrides='
        {
          "apiVersion": "v1",
          "spec": {
            "containers": [
              {
                "name": "debug",
                "image": "ghcr.io/onedr0p/alpine:rolling",
                "command": ["/bin/bash"],
                "stdin": true,
                "stdinOnce": true,
                "tty": true,
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/config"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "config",
                "persistentVolumeClaim": {
                  "claimName": "{{.claim}}"
                }
              }
            ],
            "restartPolicy": "Never"
          }
        }'
    preconditions:
      - kubectl -n {{.namespace}} get pvc {{.claim}}

  # https://github.com/fluxcd/helm-controller/issues/644
  "644":
    cmds:
      - kubectl -n {{.namespace}} delete secret -l owner=helm,name={{.release}},status=pending-upgrade
      - flux -n {{.namespace}} reconcile hr {{.release}}
    vars:
      release: '{{ or .release (fail "HelmRelease `release` is required") }}'
      namespace: '{{.namespace | default "default"}}'
    preconditions:
      - flux -n {{.namespace}} get hr {{.release}}