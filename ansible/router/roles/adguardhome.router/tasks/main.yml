---
- name: Create AdGuard Home directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - /mnt/data/adguardhome-workdir
    - /mnt/data/adguardhome-confdir

- name: Check current AdGuard Home version
  ansible.builtin.command: "podman exec adguardhome /opt/adguardhome/AdGuardHome --version"
  failed_when: false
  changed_when: false
  register: adguardhome_version_check

- name: Install AdGuard Home
  block:
    - name: Exec install CNI plugins
      ansible.builtin.command: "/mnt/data/on_boot.d/05-install-cni-plugins.sh"
      failed_when: false
      changed_when: false
    - name: Create dns startup script
      ansible.builtin.template:
        src: 10-dns.j2
        dest: /mnt/data/on_boot.d/10-dns.sh
        mode: 0755
    - name: Create dns config
      ansible.builtin.template:
        src: 20-dns.conflist.j2
        dest: /mnt/data/podman/cni/20-dns.conflist
        mode: 0755
    - name: Create onboot script
      ansible.builtin.template:
        src: 10-onboot-adguardhome.j2
        dest: /mnt/data/on_boot.d/10-onboot-adguardhome.sh
        mode: 0755
    - name: Start AdGuardHome
      ansible.builtin.command: "/mnt/data/on_boot.d/10-onboot-adguardhome.sh"
      failed_when: false
      changed_when: false
  when: >
    adguardhome_version_check.stdout is not defined
    or adguardhome_version_check.stdout == ""

- name: Update AdGuard Home
  block:
    - name: Pull an image
      containers.podman.podman_image:
        name: adguard/adguardhome:latest
    - name: Remove a AdGuard
      containers.podman.podman_container:
        name: adguardhome
        state: absent
    - name: Start AdGuardHome
      ansible.builtin.command: "/mnt/data/on_boot.d/10-onboot-adguardhome.sh"
      failed_when: false
      changed_when: false
  when: >
    adguardhome_version not in adguardhome_version_check.stdout
