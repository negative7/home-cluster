---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: thanos
      version: 1.12.4
      sourceRef:
        kind: HelmRepository
        name: stevehipwell
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: local-path-provisioner
      namespace: kube-system
    - name: longhorn
      namespace: longhorn-system
  values:
    additionalReplicaLabels: ["__replica__"]
    objstoreConfig:
      key: objstore.yml
      value:
        type: s3
        config:
          insecure: true
          bucket: thanos
    compact:
      enabled: true
      extraArgs:
        - --compact.concurrency=4
        - --delete-delay=30m
        - --retention.resolution-1h=14d
        - --retention.resolution-5m=14d
        - --retention.resolution-raw=14d
      replicaDeduplication: true
      persistence:
        enabled: true
        storageClass: local-path
        size: 20Gi
    query:
      enabled: true
      replicas: 3
    queryFrontend:
      enabled: true
      replicas: 3
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        hostname: &host thanos-query-frontend.${SECRET_PUBLIC_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host
    receive:
      enabled: true
      replicationFactor: 3
      retention: 12h
      router:
        replicas: 3
        extraArgs: ["--receive.hashrings-algorithm=ketama"]
      ingestor:
        replicas: 3
        extraArgs: ["--tsdb.wal-compression"]
        persistence:
          enabled: true
          storageClass: local-path
          size: 20Gi
    storeGateway:
      replicas: 3
      persistence:
        enabled: true
        storageClass: local-path
        size: 20Gi
    rule:
      enabled: true
      replicas: 3
      extraArgs: ["--web.prefix-header=X-Forwarded-Prefix"]
      alertmanagersConfig:
        value: |-
          alertmanagers:
            - api_version: v2
              scheme: http
              timeout: 30s
              static_configs:
                - kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
      rules:
        value: |-
          groups:
            - name: PrometheusWatcher
              rules:
                - alert: PrometheusDown
                  annotations:
                    summary: A Prometheus has disappeared from Prometheus target discovery
                  expr: absent(up{job="kube-prometheus-stack-prometheus"})
                  for: 10m
                  labels:
                    severity: critical
      persistence:
        enabled: true
        storageClass: local-path
        size: 20Gi
    serviceMonitor:
      enabled: true
  postRenderers:
    - kustomize:
        patchesStrategicMerge:
          - apiVersion: apps/v1
            kind: Statefulset
            metadata:
              name: thanos-compact
              namespace: monitoring
            spec:
              template:
                spec:
                  containers:
                    - name: thanos-compact
                      args:
                        - --deduplication.replica-label=__replica__
                        - --deduplication.func=penalty
  valuesFrom:
    - targetPath: objstoreConfig.value.config.endpoint
      kind: Secret
      name: thanos-bucket-v2
      valuesKey: BUCKET_HOST
    - targetPath: objstoreConfig.value.config.access_key
      kind: Secret
      name: thanos-bucket-v2
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: objstoreConfig.value.config.secret_key
      kind: Secret
      name: thanos-bucket-v2
      valuesKey: AWS_SECRET_ACCESS_KEY