---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 44
              - 109
              - 65542 
              - 10000
              - 1000
              - 1001

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.40.2.8395-c67dce28e@sha256:44a520cfc646ea1afdcb3ab24917a77aff617eed6946eaaf1e265cf214656971
            env:
              PLEX_ADVERTISE_URL: https://10.2.0.105:32400,https://plex.${SECRET_PUBLIC_DOMAIN}:443
              PLEX_NO_AUTH_NETWORKS: 10.0.1.0/16
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 100m
                gpu.intel.com/i915: 1
                memory: 9248M
              limits:
                gpu.intel.com/i915: 1
                memory: 9248M

    service:
      app:
        controller: plex
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          io.cilium/lb-ipam-ips: 10.2.0.105
        ports:
          http:
            port: 32400

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_PUBLIC_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        className: external
        hosts:
          - host: &hostName '{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}'
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *hostName

    persistence:
      config:
        existingClaim: plex-config
        advancedMounts:
          plex:
            app:
              - path: /config
      plex-cache:
        existingClaim: plex-cache
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Logs
      nfs-tv-media:
        type: nfs
        server: 'freenas.${SECRET_PUBLIC_DOMAIN}'
        path: /mnt/tank/media/tv
        advancedMounts:
          plex:
            app:
              - path: /media/tv
      nfs-movies-media:
        type: nfs
        server: 'freenas.${SECRET_PUBLIC_DOMAIN}'
        path: /mnt/tank/media/movies
        advancedMounts:
          plex:
            app:
              - path: /media/movies
      nfs-backup:
        type: nfs
        server: 'freenas.${SECRET_PUBLIC_DOMAIN}'
        path: /mnt/tank/backups/plex
        advancedMounts:
          plex:
            app:
              - path: /config/Backups
      transcode:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /transcode