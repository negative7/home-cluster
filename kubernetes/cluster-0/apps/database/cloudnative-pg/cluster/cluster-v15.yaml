---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: database
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:15.3
  inheritedMetadata:
    labels:
      kube-image-keeper.enix.io/image-caching-policy: ignore
  primaryUpdateStrategy: unsupervised
  storage:
    size: 30Gi
    storageClass: ceph-block
  enableSuperuserAccess: true
  superuserSecret:
    name: cloudnative-pg-secret
  bootstrap:
    recovery:
      source: &previousCluster postgres-v5
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
      wal_sender_timeout: '120s'
      wal_receiver_timeout: '120s'
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgresql
      endpointURL: http://10.2.0.10:9000
      serverName:  &currentCluster postgres-v15
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: s3://postgresql
        endpointURL: http://10.2.0.10:9000 #https://minio.${SECRET_PUBLIC_DOMAIN}
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: aws-access-key-id
          secretAccessKey:
            name: cloudnative-pg-secret
            key: aws-secret-access-key