---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
spec:
  interval: 30m
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: app-template
      version: 3.5.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: home-assistant-secret
        containers:
          app:
            image:
              repository: ghcr.io/home-assistant/home-assistant
              tag: 2024.10.0
            env:
              TZ: '${TIMEZONE}'
              POSTGRES_HOST: postgres-rw.database.svc.cluster.local
              POSTGRES_DB: home_assistant
            envFrom: *envFrom
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            resources:
              requests:
                cpu: 47m
                memory: 2Gi
              limits:
                memory: 2Gi
        pod:
          hostNetwork: true
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: home-assistant
        ports:
          http:
            port: 8123

    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_PUBLIC_DOMAIN}
        hosts:
          - host: &hostName  'hass.${SECRET_PUBLIC_DOMAIN}'
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *hostName

    persistence:
      config:
        existingClaim: home-assistant-config
        advancedMounts:
          home-assistant:
            app:
              - path: /config

      backup:
        enabled: true
        type: nfs
        server: 'freenas.${SECRET_PUBLIC_DOMAIN}'
        path: /mnt/tank/backups/hass
        globalMounts:
          - path: /config/backups
