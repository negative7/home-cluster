---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: ${clusterName}
endpoint: "https://${clusterEndpointIP}:6443"

# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.9.2
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: 1.32.0

cniConfig:
  name: none

additionalApiServerCertSans: &san
  - ${clusterName}.${clusterDNSSuffix}
  - "127.0.0.1" # KubePrism
  - &talosControlplaneVip 10.2.0.20
additionalMachineCertSans: *san

nodes:
  - hostname: kharkiv
    ipAddress: 10.2.0.21
    controlPlane: true
    installDiskSelector:
      size: "<= 256GB"
      model: "CL1-3D256-Q11 NVMe SSSTC 256GB"
    networkInterfaces:
      - interface: eno1
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
    patches:
      - &kubelet_extra_mounts |-
        machine:
          kubelet:
            extraMounts:
              - destination: /var/local/openebs
                type: bind
                source: /var/local/openebs
                options:
                  - rbind
                  - rshared
                  - rw

  - hostname: vinnytsia
    ipAddress: 10.2.0.22
    controlPlane: true
    installDiskSelector:
      size: "<= 256GB"
      model: "KXG60ZNV256G NVMe TOSHIBA 256GB"
    networkInterfaces:
      - interface: eno1
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
    patches:
      - *kubelet_extra_mounts

  - hostname: dnipro
    ipAddress: 10.2.0.23
    controlPlane: true
    installDiskSelector:
      model: "KBG40ZNS512G*"
    networkInterfaces:
      - interface: eno1
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
    patches:
      - *kubelet_extra_mounts

  - hostname: kyiv
    ipAddress: 10.2.0.24
    controlPlane: false
    installDiskSelector:
      size: "<= 256GB"
      model: "SAMSUNG MZVLW256HEHP-000H1"
    networkInterfaces:
      - interface: eno1
        dhcp: true
    patches:
      - *kubelet_extra_mounts

controlPlane:
  nodeLabels: &nodeLabels
    topology.kubernetes.io/region: ${clusterName}
    topology.kubernetes.io/zone: m
  extraManifests: &extraManifests
    - ./kubernetes/main/talos/ups.yaml
  schematic: &schematic
    customization:
      extraKernelArgs:
        - apparmor=0           # Less security, more speed
        - init_on_alloc=0      # Less security, more speed
        - init_on_free=0       # Less security, more speed
        - intel_iommu=on       # PCI Passthrough
        - iommu=pt             # PCI Passthrough
        - mitigations=off      # Less security, more speed
        - security=none        # Less security, more speed
        - net.ifnames=1        # Enable predictable NIC naming
        - talos.logging.kernel=tcp://10.2.0.10:5140/
      systemExtensions:
        officialExtensions:
          - siderolabs/intel-ucode
          - siderolabs/i915
          - siderolabs/nut-client
          - siderolabs/mei

  patches: &patches
    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false
    # Disable search domain everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true

    # Enable cluster discovery
    - |-
      cluster:
        discovery:
          registries:
            kubernetes:
              disabled: true
            service:
              disabled: false
    # Disable Host DNS
    - |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false

    # Configure kubelet
    - |-
      machine:
        kubelet:
          extraArgs:
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 10.2.0.0/24
    # Enable KubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Configure cluster
    - |-
      cluster:
        allowSchedulingOnMasters: true
        coreDNS:
            disabled: true
        proxy:
          disabled: true
        scheduler:
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # Configure etcd
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.2.0.0/24

    # Configure NFS mount options
    - |
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nconnect=16

    # Configure static host entries
    - |-
      machine:
        network:
          extraHostEntries:
            - ip: 10.2.0.20
              aliases:
                - ${clusterName}.${clusterDNSSuffix}

    # Configure custom sysctls
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_instances: 8192    # Watchdog
          fs.inotify.max_user_watches: 1048576   # Watchdog
          net.core.rmem_max: 67108864            # Cloudflared / QUIC
          net.core.wmem_max: 67108864            # Cloudflared / QUIC

    # Configure udev rules
    - |-
      machine:
        udev:
          rules:
            # Intel GPU
            - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Force nameserver
    # - |-
    #   machine:
    #     network:
    #       nameservers:
    #         - 10.0.5.3

    # # Configure NTP
    # - |-
    #   machine:
    #     time:
    #       disabled: false
    #       servers:
    #         - time.cloudflare.com

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - actions-runner-system
              - system-upgrade

worker:
  nodeLabels: *nodeLabels
  extraManifests: *extraManifests
  schematic: *schematic
  patches:
    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false
    # Disable search domain everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true

    # Enable cluster discovery
    - |-
      cluster:
        discovery:
          registries:
            kubernetes:
              disabled: true
            service:
              disabled: false
    # Disable Host DNS
    - |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false

    # Configure kubelet
    - |-
      machine:
        kubelet:
          extraArgs:
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 10.2.0.0/24
    # Enable KubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Configure cluster
    - |-
      cluster:
        allowSchedulingOnMasters: true
        coreDNS:
            disabled: true
        proxy:
          disabled: true
        scheduler:
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # Configure NFS mount options
    - |
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nconnect=16

    # Configure static host entries
    - |-
      machine:
        network:
          extraHostEntries:
            - ip: 10.2.0.20
              aliases:
                - ${clusterName}.${clusterDNSSuffix}

    # Configure custom sysctls
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_instances: 8192    # Watchdog
          fs.inotify.max_user_watches: 1048576   # Watchdog
          net.core.rmem_max: 67108864            # Cloudflared / QUIC
          net.core.wmem_max: 67108864            # Cloudflared / QUIC

    # Configure udev rules
    - |-
      machine:
        udev:
          rules:
            # Intel GPU
            - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Force nameserver
    # - |-
    #   machine:
    #     network:
    #       nameservers:
    #         - 10.0.5.3

    # # Configure NTP
    # - |-
    #   machine:
    #     time:
    #       disabled: false
    #       servers:
    #         - time.cloudflare.com
