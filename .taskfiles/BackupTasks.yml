---
version: "3"

x-preconditions: &preconditions
  - &has-app
    sh: kubectl get deploy,sts -A | awk '/{{.APP}}\s/{print $1}' | grep .
    msg: "App '{{.APP}}' not found"
  - &has-volume
    sh: kubectl get pvc -n {{.NAMESPACE}} {{.VOLUME}}
    msg: "PersistentVolumeClaim '{{.VOLUME}}' in namespace '{{.NAMESPACE}}' not found"
  - &has-restore-job
    msg: "File '{{.PROJECT_DIR}}/hack/restore-backup.yaml' not found"
    sh: "test -f {{.PROJECT_DIR}}/hack/restore-backup.yaml"

x-vars: &vars
  NAMESPACE:
    sh: kubectl get deploy,sts -A | awk '/{{.APP}}\s/{print $1}'
  NAME:
    sh: kubectl get deploy,sts -n {{.NAMESPACE}} | awk '/{{.APP}}\s/{print $1}'
  VOLUME:
    sh: kubectl get pvc -n {{.NAMESPACE}} --no-headers -l "app.kubernetes.io/name={{.APP}}" | awk '{print $1}'
  TS: '{{now | date "20060102150405"}}'

tasks:
  restore:
    desc: Spawn a job to restore an app from a backup (task backup:restore APP=zigbee2mqtt PVC1=z2m-restore-v1 )
    cmds:
      - flux -n {{.NAMESPACE}} suspend helmrelease {{.APP}}
      - kubectl -n {{.NAMESPACE}} scale {{.NAME}} --replicas 0
      - kubectl -n {{.NAMESPACE}} wait pod --for delete --selector="app.kubernetes.io/name={{.APP}}" --timeout=2m
      - envsubst < <(cat ./hack/restore-backup.yaml) | kubectl apply -f -
      - sleep 2
      - kubectl -n {{.NAMESPACE}} wait job --for condition=complete {{.APP}}-restore-backup --timeout={{.TIMEOUT | default "60m"}}
      - flux -n {{.NAMESPACE}} resume helmrelease {{.APP}}
      - kubectl -n {{.NAMESPACE}} logs job/{{.APP}}-restore-backup
      - kubectl -n {{.NAMESPACE}} delete job {{.APP}}-restore-backup
    vars: *vars
    env:
      APP: "{{.APP}}"
      NAMESPACE: "{{.NAMESPACE}}"
      VOLUME: "{{.VOLUME}}"
      PVC1: "{{.PVC1}}"
    preconditions: *preconditions
