---
version: "3"

tasks:
  mount:
    desc: Mount a PersistentVolumeClaim to a pod temporarily
    interactive: true
    vars:
      claim: '{{ or .claim (fail "PersistentVolumeClaim `claim` is required") }}'
      namespace: '{{.namespace | default "default"}}'
    cmds:
      - |
        kubectl run -n {{.namespace}} debug-{{.claim}} -i --tty --rm --image=null --privileged --overrides='
          {
            "apiVersion": "v1",
            "spec": {
              "containers": [
                {
                  "name": "debug",
                  "image": "ghcr.io/onedr0p/alpine:rolling",
                  "command": [
                    "/bin/bash"
                  ],
                  "stdin": true,
                  "stdinOnce": true,
                  "tty": true,
                  "volumeMounts": [
                    {
                      "name": "config",
                      "mountPath": "/data/config"
                    }
                  ]
                }
              ],
              "volumes": [
                {
                  "name": "config",
                  "persistentVolumeClaim": {
                    "claimName": "{{.claim}}"
                  }
                }
              ],
              "restartPolicy": "Never"
            }
          }'
    preconditions:
      - kubectl -n {{.namespace}} get pvc {{.claim}}

  delete-failed-pods:
    desc: Deletes pods with Failed phase
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    vars:
      cluster: '{{ or .cluster (fail "Argument (cluster) is required") }}'
    cmds:
      - kubectl --context {{.cluster}} delete pods --field-selector status.phase=Failed -A --ignore-not-found=true

  delete-succeeded-pods:
    desc: Deletes pods with Succeeded phase
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    vars:
      cluster: '{{ or .cluster (fail "Argument (cluster) is required") }}'
    cmds:
      - kubectl --context {{.cluster}} delete pods --field-selector status.phase=Succeeded -A --ignore-not-found=true