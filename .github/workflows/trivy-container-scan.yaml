---
name: Trivy Container Scan

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main
    paths:
      - "cluster/**.yaml"
      - "ansible/**.yml.j2"

jobs:
  detect-file-changes:
    if: contains(github.event.pull_request.labels.*.name, 'component/container')
    name: Detect File Changes
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: json
          filters: |
            yaml:
              - added|modified: "**.yaml"
              - added|modified: "**.yml"
              - added|modified: "**.yaml.j2"
              - added|modified: "**.yml.j2"
    outputs:
      yaml_files: ${{ steps.filter.outputs.yaml_files }}
  detect-containers:
    if: contains(github.event.pull_request.labels.*.name, 'component/container')
    name: Detect Containers
    runs-on: ubuntu-20.04
    needs: detect-file-changes
    strategy:
      matrix:
        file: ${{ fromJSON(needs.detect-file-changes.outputs.yaml_files) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Jo
        run: |
          sudo apt-get install jo
      - name: Detect Containers in Files
        id: containers
        run: |
          images=()
          # flux helm releases
          images+=("$(yq eval '[.. | select(has("repository")) | select(has("tag"))] | .[] | .repository + ":" + .tag' ${{ matrix.file }})")
          # kubernetes deployments, statefulsets and daemonsets
          images+=("$(yq eval '.spec.template.spec.containers.[].image' ${{ matrix.file }})")
          # kubernetes pods
          images+=("$(yq eval '.spec.containers.[].image' ${{ matrix.file }})")
          # kubernetes cronjobs
          images+=("$(yq eval '.spec.jobTemplate.spec.template.spec.containers.[].image' ${{ matrix.file }})")
          # docker compose
          images+=("$(yq eval '.services.*.image' ${{ matrix.file }})")
          parsed_images=()
          for i in "${images[@]}"; do
              if [[ -n "${i}" && "${i}" != "null" ]]; then
                  for b in ${i//\\n/ }; do
                      parsed_images+=("${b}")
                  done
              fi
          done
          containers=$(jo -a "${parsed_images[@]}")
          echo "${containers}" | jq .
          echo ::set-output name=containers::${containers}
    outputs:
      containers: "{\"container\": ${{ steps.containers.outputs.containers }} }"
  scan-container:
    if: contains(github.event.pull_request.labels.*.name, 'component/container')
    name: Scan Container
    runs-on: ubuntu-20.04
    needs: detect-containers
    strategy:
      matrix: ${{ fromJSON(needs.detect-containers.outputs.containers) }}
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Scan Container
        uses: aquasecurity/trivy-action@0.2.1
        with:
          image-ref: ${{ matrix.container }}
          vuln-type: os,library
          severity: CRITICAL,HIGH
          format: template
          template: "@/contrib/sarif.tpl"
          output: trivy-results.sarif
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: trivy-results.sarif
